plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'maven-publish'
}

base {
    archivesName = project.archives_base_name
}

version = project.mod_version
group = project.maven_group

sourceSets {
    main
    test
    data {
        compileClasspath += main.compileClasspath + main.output
        runtimeClasspath += main.runtimeClasspath + main.output
    }
}

loom {
    splitEnvironmentSourceSets()
    accessWidenerPath.set(file("src/main/resources/aylyth.accesswidener"))
	
	runs {
        client {
            client()

            name "Minecraft Client"
            programArgs "--username", "HatsuneMiku"
            programArgs "--uuid", "534e8d1c-5d83-4c56-a35d-b8f968ddcd01"
            programArgs "--width", "1280"
            programArgs "--height", "800"

            vmArg "-Daylyth.debug"
        }
		datagen {
            server()

            source(sourceSets.data)

			name "Minecraft Data"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
//			vmArg "-Dfabric-api.datagen.strict-validation"

			runDir "run"
		}
	}

    mods {
        "${archives_base_name}" {
            sourceSet(sourceSets.main)
            sourceSet(sourceSets.client)
            sourceSet(sourceSets.data)
        }
    }
}

idea {
    module {
        inheritOutputDirs = false
    }
}

sourceSets.main.resources.srcDirs += ['src/main/generated']

repositories {
    mavenLocal() {
        content {
            includeGroup 'xyz.deftu'
        }
    }
    maven {
        name "reach entity attributes"
        url "https://maven.jamieswhiteshirt.com/libs-release"
    }
    maven {
        name "terraform"
        url "https://maven.terraformersmc.com"
    }
    maven {
        name "geckolib"
        url "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven"
    }
    maven {
        name = "SmartBrainLib (SBL) Maven Repo"
        url = "https://dl.cloudsmith.io/public/tslat/sbl/maven/"
    }
    maven {
        name "rei"
        url "https://maven.shedaniel.me"
    }
	maven {
			url "https://cursemaven.com"
	}
    maven {
        name "patchouli"
        url "https://maven.blamejared.com"
    }
    maven {
        name "jitpack"
        url "https://jitpack.io"
    }
    exclusiveContent {
        forRepository {
            maven {
                name "Modrinth"
                url "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    // https://github.com/Ladysnake/Impersonate/tree/1.20.1
    maven {
        name "Ladysnake Mods"
        url "https://maven.ladysnake.org/releases"
        content {
            includeGroup 'io.github.ladysnake'
            includeGroup 'org.ladysnake'
            includeGroupByRegex 'dev\\.onyxstudios\\..*'
        }
    }
    maven {
        name "Nexus Repository Manager"
        url 'https://oss.sonatype.org/content/repositories/snapshots'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "net.fabricmc:yarn:${yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    compileOnly("org.jetbrains:annotations:24.1.0")

    modImplementation(include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${cardinal_components_version}"))
    modImplementation(include("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${cardinal_components_version}"))
    modImplementation(include("com.jamieswhiteshirt:reach-entity-attributes:${reach_entity_attributes_version}"))
    modImplementation(include("com.terraformersmc.terraform-api:terraform-wood-api-v1:${terraform_wood_api_version}"))
    modImplementation(include('com.github.Chocohead:Fabric-ASM:v2.3'))

    modImplementation "software.bernie.geckolib:geckolib-fabric-${geckolib_version}"
    modImplementation "net.tslat.smartbrainlib:SmartBrainLib-fabric-${minecraft_version}:${sbl_version}"
    modImplementation "dev.emi:trinkets:${trinkets_version}"
    modImplementation "maven.modrinth:fusion-connected-textures:${fusion_version}-fabric-mc${minecraft_version}"

    // EMI
    modCompileOnly "dev.emi:emi-fabric:${emi_version}:api"
    modLocalRuntime "dev.emi:emi-fabric:${emi_version}"

    // REI
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${rei_version}"
    // modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${rei_version}"

    if (findProperty("has_local_suggestionproviderfix")) {
        modRuntimeOnly("xyz.deftu:SuggestionProviderFix:1.0.0")
    }

    // Nice dev things
	modRuntimeOnly "curse.maven:disablecustomworldsadvice-401978:4619700"
    // https://www.curseforge.com/minecraft/mc-mods/debug-utils-fabric/files/4644075
    modRuntimeOnly "curse.maven:debugutils-783010:4644075"

    // Testing compat
    modRuntimeOnly "maven.modrinth:sodium:mc1.20.1-0.5.8"
    modCompileOnly "maven.modrinth:iris:1.6.17+1.20.1"
    modRuntimeOnly "maven.modrinth:indium:1.0.30+mc1.20.4"

    // Bewitchment
    modImplementation("curse.maven:bewitchment-394915:${bewitchment_fileid}")
    modImplementation("com.github.virtuoel:pehkui:${pehkui_version}")
    modImplementation("vazkii.patchouli:Patchouli:${patchouli_version}")
    modImplementation("maven.modrinth:midnightlib:${midnightlib_version}")
    modImplementation("com.github.emilyploszaj:step-height-entity-attribute:${step_height_version}")
    modImplementation("io.github.ladysnake:PlayerAbilityLib:${pal_version}")
    modImplementation("me.lucko:fabric-permissions-api:${fabric_permissions_api_version}")
    modImplementation("org.ladysnake:impersonate:${impersonate_version}") {
        transitive = false
    }
}

processResources {
    exclude(".cache")
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

assemble.dependsOn runDatagen

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}
